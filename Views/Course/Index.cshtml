@using ASPCourseRegistrationApp.Models
@using ASPCourseRegistrationApp.Models.ViewModels

@model IEnumerable<Tuple<Course, bool>>

@{
    ViewData["Title"] = "Register For Courses";

    int[] registeredCourseIds = Model.Where(x => x.Item2).Select(x => x.Item1.Id).ToArray();
    IEnumerable<Tuple<Course, bool>> allCourses = Model.OrderBy(c => c.Item1.CourseName).ThenBy(c => c.Item1.StartTime);

    string order = Context.Request.Query["order"];
    string terms = Context.Request.Query["terms"];

    if (!string.IsNullOrEmpty(terms))
    {
        allCourses = allCourses.Where(x =>
        x.Item1.CourseName.ToLowerInvariant().Contains(terms.ToLowerInvariant()) ||
         x.Item1.Instructor.FirstName.ToLowerInvariant().Contains(terms.ToLowerInvariant()) ||
         x.Item1.Instructor.LastName.ToLowerInvariant().Contains(terms.ToLowerInvariant()) ||
         x.Item1.CourseCode.ToLowerInvariant().Contains(terms.ToLowerInvariant())
        );
    }
    if (!string.IsNullOrEmpty(order))
    {
        switch (order)
        {
            case "instructor":
                allCourses = allCourses.OrderBy(x => x.Item1.Instructor.LastName);
                break;
            case "time":
                allCourses = allCourses.OrderBy(x => x.Item1.StartTime);
                break;
            case "name":
            default:
                allCourses = allCourses.OrderBy(x => x.Item1.CourseName);
                break;
        }
    }
}



<div class="main">
    <div class="text-center">
        <h1 class="display-4 mb-5">@ViewData["Title"]</h1>
    </div>
    <div class="row mt-5">
        <div class="col-md-3 order-md-2 mb-5">
            <div class="sticky-top" style="top: 20px">
                <div class="card register-form mb-3">
                    <div class="card-body">
                        <form id="form-course-filter">
                            <h5 class="card-title">Filter</h5>
                            <div class="form-group">
                                <label for="course-search">Search</label>
                                <input id="course-search" class="form-control" type="text" value="@terms" placeholder="Search..." />
                            </div>
                            <div class="form-group">
                                <label for="order-select">Order By</label>
                                <select value="@order" class="form-control" id="order-select">
                                    <option value="name">Course Name</option>
                                    <option value="instructor">Instructor</option>
                                    <option value="time">Start Time</option>
                                </select>
                            </div>
                            <p class="card-text">Confirm Course Selection</p>
                            <button id="btn-filter" type="submit" class="btn btn-primary">Filter</button>

                            @Html.Hidden("order", order)
                            @Html.Hidden("terms", terms)

                        </form>
                    </div>
                </div>
                <div class="card register-form">
                    <div class="card-body">

                        @if (!User.Identity.IsAuthenticated)
                        {
                            <h5 class="card-title">Log In</h5>
                            <p class="card-text">Log in to register for courses.</p>
                            <a href="/Identity/Account/Login" class="btn btn-primary">Log In</a>
                        }
                        else
                        {
                            <form id="form-register-courses">
                                <h5 class="card-title">Registered Courses</h5>

                                <ul id="registered-courses-list">
                                    @foreach (Tuple<Course, bool> courseTuple in allCourses)
                                    {
                                        if (courseTuple.Item2)
                                        {
                                            <li>@courseTuple.Item1.CourseCode</li>
                                        }
                                    }
                                </ul>
                                <p class="card-text">Confirm Course Selection</p>
                                <button id="btn-register" type="submit" class="btn btn-primary">Submit</button>
                                @Html.Hidden("registeredCourseIds", Json.Serialize(registeredCourseIds))
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-9 order-md-1">
            <div class="course-list">
                @foreach (Tuple<Course, bool> courseTuple in allCourses)
                {
                    Course course = courseTuple.Item1;
                    bool isRegistered = courseTuple.Item2;

                    string formattedStartTime = course.StartTime.HasValue ? course.StartTime.Value.ToString("h:mmtt").ToLower() : null;
                    string formattedEndTime = course.EndTime.HasValue ? course.EndTime.Value.ToString("h:mmtt").ToLower() : null;

                    string selectedClass = isRegistered ? "selected" : string.Empty;

                    <div class="course-card @selectedClass" data-id="@course.Id" data-code="@course.CourseCode">
                        <div class="row">
                            <div class="col-md-9">
                                <h3 class="course-card__title">
                                    @course.CourseName
                                </h3>
                            </div>
                            <div class="col-md text-md-right status-badge">
                                @if (isRegistered)
                                {
                                    <span class="badge badge-success">Registered</span>
                                }

                            </div>

                        </div>

                        <div class="row">
                            <div class="col-md-6 font-weight-bold">
                                @if (course.Instructor != null)
                                {
                                    @(course.Instructor.FirstName + " " + course.Instructor.LastName)
                                }

                            </div>
                            <div class="col-md-6 font-weight-bold">
                                @course.CourseCode
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                @if (course.StartTime.HasValue && course.EndTime.HasValue)
                                {
                                    @(formattedStartTime + " - " + formattedEndTime)
                                }

                            </div>
                            <div class="col-md-6">
                                @course.Location
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>

    </div>

</div>

